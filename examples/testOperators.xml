<?xml version="1.0" standalone="yes"?>
<beast version='2.0'
       namespace='beast.evolution.alignment:beast.evolution.speciation:beast.core:beast.util:beast.core.util:beast.math.distributions:beast.evolution.operators:beast.evolution.tree'>

    <taxonset spec='TaxonSet' id='taxonset'>
        <taxon spec='Taxon' id='A'/>
        <taxon spec='Taxon' id='B'/>
        <taxon spec='Taxon' id='C'/>
    </taxonset>

    <trait id='traitset' spec='beast.evolution.tree.TraitSet' traitname='date-forward' units='day'
           value='
		A  = 2.0,
		B  = 1.0,
		C  = 0.0'>
        <taxa idref='taxonset'/>
    </trait>

    <tree spec='TreeParser' id='tree'>
        <taxonset idref='taxonset'/>
        <input name='newick'>
            ((A:1.5,B:0.5):1.0,C:0.5);
        </input>
        <trait idref='traitset'/>
    </tree>


    <BDSamplingThroughTimeSampledAncestorModel spec="SABDSamplingThroughTimeModel" id="birthDeath" tree="@tree">
        <parameter name="orig_root" id="orig_root" value="10." lower="0." upper="1000." dimension="1"/>

        <parameter name="birthRate" id="birthRate" value="2." lower="0." upper="3." dimension="1"/>
        <parameter name="deathRate" id="deathRate" value="0.99" lower="0." upper="1." dimension="1"/>
        <parameter name="samplingRate" id="samplingRate" value="0.5" lower="0." upper="1." dimension="1"/>
        <parameter name="becomeNoninfectiousAfterSamplingProbability" id="bNASP" value="0.5" lower="0."
                   upper="1." dimension="1"/>
    </BDSamplingThroughTimeSampledAncestorModel>

    <run spec="MCMC" id="mcmc" chainLength="1000000" preBurnin="0">
        <!-- <init spec='CalibratedYuleInitialTree' id='startTree' initial='@tree'
              taxonset='@taxa' calibrations='@cal'>
        </init> -->

        <state>
            <stateNode idref='tree' />
        </state>

        <distribution spec='CompoundDistribution' id='posterior'>
            <distribution idref='birthDeath'/>
        </distribution>

        <operator spec='WilsonBaldingForFakeSampledAncestorTrees' weight="1" tree="@tree"/>
        <operator spec='TreeDimensionJump' weight="1" tree="@tree"/>
        <operator spec='SampledNodeDateRandomWalkerForFakeSATrees' weight="1" tree="@tree" windowSize="10.0"/>
        <operator spec='ExchangeForFakeSampledAncestorTrees' weight="1" tree="@tree" isNarrow="true"/>
        <!--<operator spec='ScaleOperatorForFakeSATrees' weight="1" tree="@tree" scaleFactor="0.5"/>
        <operator spec='UniformForFakeSATrees' weight="1" tree="@tree"/>
        <operator spec='ExchangeForFakeSampledAncestorTrees' weight="1" tree="@tree" isNarrow="false"/>   -->



        <logger logEvery="1000" fileName="testOperators.$(seed).log">
            <model idref='posterior'/>
            <!-- <log idref="posterior"/> -->
            <log idref="birthDeath"/>
        </logger>
        <logger logEvery="100" fileName="testOperators.$(seed).trees">
            <log idref="tree"/>
        </logger>
        <logger logEvery="1000">
            <model idref='posterior'/>
            <log idref="birthDeath"/>
        </logger>
    </run>
</beast>